"use client"

import { useState, useEffect } from "react"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import type { TagWithCount } from "@/types/insights"

interface InsightsSummaryProps {
  userId: string
}

export function InsightsSummary({ userId }: InsightsSummaryProps) {
  const [topTags, setTopTags] = useState<TagWithCount[]>([])
  const [loading, setLoading] = useState(true)
  const [summary, setSummary] = useState<string>("")

  useEffect(() => {
    const fetchInsightsData = async () => {
      try {
        setLoading(true)
        const response = await fetch(`/api/insights?userId=${userId}`)

        if (!response.ok) {
          throw new Error("Failed to fetch insights data")
        }

        const data = await response.json()
        setTopTags(data.topTags || [])

        // Generate a summary based on the top tags
        if (data.topTags && data.topTags.length > 0) {
          generateSummary(data.topTags)
        } else {
          setSummary("Not enough journal entries to generate insights yet.")
        }
      } catch (error) {
        console.error("Error fetching insights data:", error)
        setSummary("Unable to generate insights at this time.")
      } finally {
        setLoading(false)
      }
    }

    const generateSummary = (tags: TagWithCount[]) => {
      // This would ideally be generated by an AI based on the user's journal entries
      // For now, we'll create a simple summary based on the top tags

      if (tags.length === 0) {
        setSummary("Start journaling to see insights about your patterns and growth.")
        return
      }

      const topThreeTags = tags
        .slice(0, 3)
        .map((tag) => tag.name)
        .join(", ")

      setSummary(
        `Based on your journal entries, we've noticed patterns related to ${topThreeTags}. ` +
          `Your writing shows self-awareness and reflection. Continue journaling regularly to gain deeper insights.`,
      )
    }

    if (userId) {
      fetchInsightsData()
    }
  }, [userId])

  if (loading) {
    return (
      <Card>
        <CardHeader>
          <CardTitle>Your Insights Summary</CardTitle>
        </CardHeader>
        <CardContent>
          <div className="h-24 flex items-center justify-center">
            <div className="animate-pulse space-y-2 w-full">
              <div className="h-4 bg-muted rounded w-3/4"></div>
              <div className="h-4 bg-muted rounded w-full"></div>
              <div className="h-4 bg-muted rounded w-5/6"></div>
            </div>
          </div>
        </CardContent>
      </Card>
    )
  }

  return (
    <Card>
      <CardHeader>
        <CardTitle>Your Insights Summary</CardTitle>
      </CardHeader>
      <CardContent>
        <p className="text-muted-foreground">{summary}</p>
      </CardContent>
    </Card>
  )
}
